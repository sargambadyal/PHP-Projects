

/*HTML title attribute*/
/*select optgroup*/
/* negative margins */


/*text-align*/
/*font-size,variant,font-family,font-weight*/


/* CSS * selector */

/* blueprint css framework 960 css framework */

/*Css Grouping And Nesting */

/*Css height : Auto */

/*Css max min height width*/

/* CSS !important */



/*CSS li - display inline and block */

/* Visible and display important difference */


/*Block Element  And Inline Element*/
A block element is an element that takes up the full width available, and has 

a line break before and after it.

Examples of block elements:

<h1>
<p>
<div>
An inline element only takes up as much width as necessary, and does not force 

line breaks.

Examples of inline elements:

<span>
<a> 

/* CSs position fixed : feedback example */

Positioning

The CSS positioning properties allow you to position an element. It can also place an element behind another, and specify what should happen when an element's content is too big.

Elements can be positioned using the top, bottom, left, and right properties. However, these properties will not work unless the position property is set first. They also work differently depending on the positioning method.

There are four different positioning methods.

Static Positioning

HTML elements are positioned static by default. A static positioned element is always positioned according to the normal flow of the page.

Static positioned elements are not affected by the top, bottom, left, and right properties.

Fixed Positioning

An element with fixed position is positioned relative to the browser window.

It will not move even if the window is scrolled:


p.pos_fixed
{
position:fixed;
top:30px;
right:5px;
}


Relative Positioning

A relative positioned element is positioned relative to its normal position.
h2.pos_left
{
position:relative;
left:-20px;
}
h2.pos_right
{
position:relative;
left:20px;
}

The content of relatively positioned elements can be moved and overlap other elements, 
but the reserved space for the element is still preserved in the normal flow.


/* CSS z-index example */
img
{
position:absolute;
left:0px;
top:0px;
z-index:-1;
}
<h1>This is a heading</h1>
<img src="w3css.gif" width="100" height="140" />
<p>Because the image has a z-index of -1, it will be placed behind the text.</p>



/* CSS FLOATING*/
With CSS float, an element can be pushed to the left or right, allowing other elements to wrap around it.

Float is very often used for images, but it is also useful when working with layouts.


How Elements Float

Elements are floated horizontally, this means that an element can only be floated left or right, not up or down.

A floated element will move as far to the left or right as it can. Usually this means all the way to the left or right of the containing element.

The elements after the floating element will flow around it.

The elements before the floating element will not be affected.

If an image is floated to the right, a following text flows around it, to the left:



/* */






/* overflow property of div */

/*change cursor  pointer help*/



/* CSS Float example and CSS navigation example */

/* CSS opacity*/
opacity:0.4;filter:alpha(opacity=40)



/*Css media screen , print  , etc. etc.



/*CSS -3 border */
/*CSS -3 box shadow */
-moz-box-shadow: 10px 10px 5px #888888; /* Firefox 3.6 and earlier */
-webkit-box-shadow: 10px 10px 5px #888888; /* Safari */
box-shadow: 10px 10px 5px #888888;
/* CSS multiple background images*/
background-image:url(img_flwr.gif),url(img_tree.gif);

/*CSS-3 font*/

h1{

}

@font-face
{
font-family: IndianRupee;
src: url('Sansation_Light.ttf'),
     url('Sansation_Light.eot') format("opentype"); /* IE */
}

.rupee{
font-family: IndianRupee
}

<div class="Rupee">Rs</div>



/*CSS background gradient*/

background-image: -webkit-gradient(
    linear,
    left bottom,
    left top,
    color-stop(0.25, rgb(255,255,255)),
    color-stop(1, rgb(0,0,150))
);
background-image: -moz-linear-gradient(
    center bottom,
    rgb(255,255,255) 25%,
    rgb(0,0,150) 100%
);
http://gradients.glrzad.com/










